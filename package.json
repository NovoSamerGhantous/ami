{
  "name": "ami.js",
  "version": "0.33.3",
  "type": "module",
  "main": "build/ami.js",
  "module": "build/ami.module.js",
  "exports": {
    ".": {
      "import": "./build/ami.module.js",
      "require": "./build/ami.cjs"
    },
    "./examples/*": "./examples/*",
    "./src/*": "./src/*"
  },
  "sideEffects": false,
  "files": [
    "build/ami.js",
    "build/ami.cjs",
    "build/ami.min.js",
    "build/ami.module.js",
    "examples/js",
    "examples/jsm",
    "examples/fonts",
    "LICENSE",
    "package.json",
    "README.md",
    "src"
  ],
  "directories": {
    "doc": "docs",
    "example": "examples",
    "test": "test"
  },
  "eslintConfig": {
    "root": true,
    "extends": [
      "mdcs",
      "plugin:compat/recommended"
    ],
    "parser": "@babel/eslint-parser",
    "parserOptions": {
      "babelOptions": {
        "configFile": "./utils/build/.babelrc.json"
      }
    },
    "plugins": [
      "html",
      "import"
    ],
    "rules": {
      "no-throw-literal": [
        "error"
      ],
      "import/extensions": [
        "error",
        "always"
      ],
      "quotes": [
        "error",
        "single"
      ],
      "prefer-const": [
        "error",
        {
          "destructuring": "any",
          "ignoreReadBeforeAssign": false
        }
      ]
    }
  },
  "scripts": {
    "start": "npm run dev",
    "test": "npm run lint && npm run test-unit",
    "build": "rollup -c utils/build/rollup.config.js",
    "build-module": "ONLY_MODULE=true rollup -c utils/build/rollup.config.js",
    "build-examples": "rollup -c utils/build/rollup.examples.config.js && echo '\nFormatting...' && eslint examples/js --ext js --ignore-pattern libs --ignore-pattern ifc --fix",
    "dev": "concurrently --names \"ROLLUP,HTTP\" -c \"bgBlue.bold,bgGreen.bold\" \"rollup -c utils/build/rollup.config.js -w -m inline\" \"servez -p 8080\"",
    "lint": "eslint src --ext js",
    "lint-examples": "eslint examples/js examples/jsm --ext js --ignore-pattern libs --ignore-pattern ifc",
    "lint-fix": "npm run lint -- --fix && npm run lint-examples -- --fix",
    "lint-docs": "eslint docs --ext html",
    "test-unit": "npm run unit --prefix test",
    "test-e2e": "node test/e2e/puppeteer.js",
    "test-e2e-cov": "node test/e2e/check-coverage.js",
    "test-treeshake": "rollup -c test/rollup.treeshake.config.js",
    "make-screenshot": "node test/e2e/puppeteer.js --make"
  },
  "keywords": [
    "ami",
    "ami.js",
    "three.js",
    "webgl",
    "dicom",
    "nifti",
    "awesome",
    "medical",
    "imaging",
    "xtk",
    "nrrd",
    "vtk",
    "stl",
    "trk"
  ],
  "author": {
    "name": "Nicolas Rannou",
    "email": "nicolas@eunate.ch",
    "url": "https://eunate.ch"
  },
  "license": "Apache-2.0",
  "repository": {
    "type": "git",
    "url": "https://fnndsc.github.io/ami"
  },
  "config": {
    "gaKey": "UA-39303022-3",
    "babel": "--module-bind js=babel-loader --colors --display-error-details"
  },
  "dependencies": {
    "OpenJPEG.js": "joedrago/openjpeg#master",
    "dicom-parser": "1.8.13",
    "jpeg-lossless-decoder-js": "1.2.3",
    "math-float32-to-binary-string": "^1.0.0",
    "nifti-reader-js": "v0.5.3",
    "nrrd-js": "^0.2.1",
    "pako": "2.0.4",
    "three": "0.140.2"
  },
  "devDependencies": {
    "@types/three": "0.140.0",  
    "puppeteer": "14.1.1",

    "@babel/core": "^7.17.9",
    "@babel/eslint-parser": "^7.17.0",
    "@babel/plugin-proposal-class-properties": "^7.16.7",
    "@babel/preset-env": "^7.16.11",
    "@rollup/plugin-babel": "^5.3.1",
    "@rollup/plugin-node-resolve": "^13.2.0",
    "chalk": "^5.0.1",
    "concurrently": "^7.1.0",
    "eslint": "^8.13.0",
    "eslint-config-mdcs": "^5.0.0",
    "eslint-plugin-compat": "^4.0.2",
    "eslint-plugin-html": "^6.2.0",
    "eslint-plugin-import": "^2.26.0",
    "rollup": "^2.70.2",
    "rollup-plugin-filesize": "^9.1.2",
    "rollup-plugin-terser": "^7.0.2",
    "rollup-plugin-visualizer": "^5.6.0",
    "servez": "^1.14.1"    
  },
  "jspm": {
    "files": [
      "package.json",
      "LICENSE",
      "README.md",
      "build/three.js",
      "build/three.min.js",
      "build/three.module.js"
    ]
  }
}
